//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace HCXT.Lib.BusinessService.WeixinMsgFileScaner.Ws_AccessToken {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service_AccessTokenSoap", Namespace="http://HCXT.Lib.WebService.WeiXinAccessToken/")]
    public partial class Service_AccessToken : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAccessTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicNoListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service_AccessToken() {
            this.Url = global::HCXT.Lib.BusinessService.WeixinMsgFileScaner.Properties.Settings.Default.HCXT_Lib_BusinessService_WeixinMsgFileScaner_Ws_AccessToken_Service_AccessToken;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAccessTokenCompletedEventHandler GetAccessTokenCompleted;
        
        /// <remarks/>
        public event GetPublicNoCompletedEventHandler GetPublicNoCompleted;
        
        /// <remarks/>
        public event GetPublicNoListCompletedEventHandler GetPublicNoListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HCXT.Lib.WebService.WeiXinAccessToken/GetAccessToken", RequestNamespace="http://HCXT.Lib.WebService.WeiXinAccessToken/", ResponseNamespace="http://HCXT.Lib.WebService.WeiXinAccessToken/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccessToken(string argType, string arg, string randStr, string sign) {
            object[] results = this.Invoke("GetAccessToken", new object[] {
                        argType,
                        arg,
                        randStr,
                        sign});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessTokenAsync(string argType, string arg, string randStr, string sign) {
            this.GetAccessTokenAsync(argType, arg, randStr, sign, null);
        }
        
        /// <remarks/>
        public void GetAccessTokenAsync(string argType, string arg, string randStr, string sign, object userState) {
            if ((this.GetAccessTokenOperationCompleted == null)) {
                this.GetAccessTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessTokenOperationCompleted);
            }
            this.InvokeAsync("GetAccessToken", new object[] {
                        argType,
                        arg,
                        randStr,
                        sign}, this.GetAccessTokenOperationCompleted, userState);
        }
        
        private void OnGetAccessTokenOperationCompleted(object arg) {
            if ((this.GetAccessTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessTokenCompleted(this, new GetAccessTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HCXT.Lib.WebService.WeiXinAccessToken/GetPublicNo", RequestNamespace="http://HCXT.Lib.WebService.WeiXinAccessToken/", ResponseNamespace="http://HCXT.Lib.WebService.WeiXinAccessToken/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PublicNo GetPublicNo(string argType, string arg, string randStr, string sign) {
            object[] results = this.Invoke("GetPublicNo", new object[] {
                        argType,
                        arg,
                        randStr,
                        sign});
            return ((PublicNo)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicNoAsync(string argType, string arg, string randStr, string sign) {
            this.GetPublicNoAsync(argType, arg, randStr, sign, null);
        }
        
        /// <remarks/>
        public void GetPublicNoAsync(string argType, string arg, string randStr, string sign, object userState) {
            if ((this.GetPublicNoOperationCompleted == null)) {
                this.GetPublicNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicNoOperationCompleted);
            }
            this.InvokeAsync("GetPublicNo", new object[] {
                        argType,
                        arg,
                        randStr,
                        sign}, this.GetPublicNoOperationCompleted, userState);
        }
        
        private void OnGetPublicNoOperationCompleted(object arg) {
            if ((this.GetPublicNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicNoCompleted(this, new GetPublicNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://HCXT.Lib.WebService.WeiXinAccessToken/GetPublicNoList", RequestNamespace="http://HCXT.Lib.WebService.WeiXinAccessToken/", ResponseNamespace="http://HCXT.Lib.WebService.WeiXinAccessToken/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PublicNo[] GetPublicNoList(string randStr, string sign) {
            object[] results = this.Invoke("GetPublicNoList", new object[] {
                        randStr,
                        sign});
            return ((PublicNo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicNoListAsync(string randStr, string sign) {
            this.GetPublicNoListAsync(randStr, sign, null);
        }
        
        /// <remarks/>
        public void GetPublicNoListAsync(string randStr, string sign, object userState) {
            if ((this.GetPublicNoListOperationCompleted == null)) {
                this.GetPublicNoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicNoListOperationCompleted);
            }
            this.InvokeAsync("GetPublicNoList", new object[] {
                        randStr,
                        sign}, this.GetPublicNoListOperationCompleted, userState);
        }
        
        private void OnGetPublicNoListOperationCompleted(object arg) {
            if ((this.GetPublicNoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicNoListCompleted(this, new GetPublicNoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://HCXT.Lib.WebService.WeiXinAccessToken/")]
    public partial class PublicNo {
        
        private string servIdField;
        
        private string numberField;
        
        private string nameField;
        
        private string tokenField;
        
        private string appIdField;
        
        private string appSecretField;
        
        private string encodingAESKeyField;
        
        private string mchIdField;
        
        private string keyField;
        
        private string accessTokenField;
        
        private System.DateTime accessTokenExpiresTimeField;
        
        private string jsapiTicketField;
        
        private System.DateTime jsapiTicketExpiresTimeField;
        
        private string oAuth20AccessTokenField;
        
        private System.DateTime oAuth20AccessTokenExpiresTimeField;
        
        private string notifyUrlField;
        
        private string telChargeUrlField;
        
        private string areaNoField;
        
        /// <remarks/>
        public string ServId {
            get {
                return this.servIdField;
            }
            set {
                this.servIdField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string AppId {
            get {
                return this.appIdField;
            }
            set {
                this.appIdField = value;
            }
        }
        
        /// <remarks/>
        public string AppSecret {
            get {
                return this.appSecretField;
            }
            set {
                this.appSecretField = value;
            }
        }
        
        /// <remarks/>
        public string EncodingAESKey {
            get {
                return this.encodingAESKeyField;
            }
            set {
                this.encodingAESKeyField = value;
            }
        }
        
        /// <remarks/>
        public string MchId {
            get {
                return this.mchIdField;
            }
            set {
                this.mchIdField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string AccessToken {
            get {
                return this.accessTokenField;
            }
            set {
                this.accessTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AccessTokenExpiresTime {
            get {
                return this.accessTokenExpiresTimeField;
            }
            set {
                this.accessTokenExpiresTimeField = value;
            }
        }
        
        /// <remarks/>
        public string JsapiTicket {
            get {
                return this.jsapiTicketField;
            }
            set {
                this.jsapiTicketField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime JsapiTicketExpiresTime {
            get {
                return this.jsapiTicketExpiresTimeField;
            }
            set {
                this.jsapiTicketExpiresTimeField = value;
            }
        }
        
        /// <remarks/>
        public string OAuth20AccessToken {
            get {
                return this.oAuth20AccessTokenField;
            }
            set {
                this.oAuth20AccessTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OAuth20AccessTokenExpiresTime {
            get {
                return this.oAuth20AccessTokenExpiresTimeField;
            }
            set {
                this.oAuth20AccessTokenExpiresTimeField = value;
            }
        }
        
        /// <remarks/>
        public string NotifyUrl {
            get {
                return this.notifyUrlField;
            }
            set {
                this.notifyUrlField = value;
            }
        }
        
        /// <remarks/>
        public string TelChargeUrl {
            get {
                return this.telChargeUrlField;
            }
            set {
                this.telChargeUrlField = value;
            }
        }
        
        /// <remarks/>
        public string AreaNo {
            get {
                return this.areaNoField;
            }
            set {
                this.areaNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessTokenCompletedEventHandler(object sender, GetAccessTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPublicNoCompletedEventHandler(object sender, GetPublicNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PublicNo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PublicNo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPublicNoListCompletedEventHandler(object sender, GetPublicNoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicNoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicNoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PublicNo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PublicNo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591